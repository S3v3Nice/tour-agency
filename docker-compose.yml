version: '3'

services:
    nginx:
        container_name: tour-agency_nginx
        build:
            context: .
            dockerfile: docker/nginx/Dockerfile
        ports:
            - "${NGINX_PORT}:80"
        volumes:
            - ./:/var/www
            - ./docker/logs/nginx:/var/log/nginx
            - ./docker/nginx:/etc/nginx/conf.d
        depends_on:
            - app
            - node-vite

    app:
        container_name: tour-agency_app
        build:
            context: .
            dockerfile: docker/app/Dockerfile
        volumes:
            - ./:/var/www
            - ./docker/app/php.ini:/usr/local/etc/php/php.ini:ro
        depends_on:
            - mysql

    mysql:
        container_name: tour-agency_mysql
        build:
            context: .
            dockerfile: docker/mysql/Dockerfile
        ports:
            - "${DB_PORT}:3306"
        restart: unless-stopped
        volumes:
            - ./docker/data/mysql:/var/lib/mysql
            - ./docker/logs/mysql:/var/log/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci

    node-vite:
        container_name: tour-agency_node-vite
        image: node:20.4-alpine
        ports:
            - "${VITE_PORT}:5173"
        restart: unless-stopped
        volumes:
            - ./:/var/www
        working_dir: /var/www
        command: sh -c 'npm i && if [ "${APP_DEBUG}" = "true" ]; then npm run dev; else npm run build && tail -f /dev/null; fi'
